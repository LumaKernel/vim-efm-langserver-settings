---
version: 2
commands:

tools:
  cppcheck: &cppcheck-lint
    lint-command: 'cppcheck --enable=style --error-exitcode=1 ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c: %m'

  vale: &vale-lint
    lint-command: 'vale --relative --output line ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c:%*[^:]:%m'

  vint: &vint-lint
    lint-command: 'vint --stdin-display-name ${INPUT} -'
    lint-stdin: true

  markdownlint: &markdownlint-lint
    lint-command: 'markdownlint -s'
    lint-stdin: true
    lint-formats:
      - '%f:%l %m'

  jq: &jq-format
    format-command: 'jq .'

  fixjson: &fixjson-format
    format-command: 'fixjson'

  shellcheck: &shellcheck-lint
    lint-command: 'shellcheck -s bash -f gcc -x -o all -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  yamllint: &yamllint-lint
    lint-command: 'yamllint --strict --format parsable ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c: [%trror] %m'
      - '%f:%l:%c: [%tarning] %m'
    env:
      - 'PYTHONIOENCODING=UTF-8'

  restructuredtext-lint: &restructuredtext-lint-lint
    lint-command: 'restructuredtext-lint --encoding utf-8 --level warning --format text ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%tARNING %f:%l %m'
      - '%tRROR %f:%l %m'

# languages setting
languages:
  vim:
    - <<: *vint-lint

  markdown:
    - <<: *markdownlint-lint

  json:
    - <<: *jq-format
    - <<: *fixjson-format

  json5:
    - <<: *fixjson-format

  text:
    - <<: *vale-lint

  cpp:
    - <<: *cppcheck-lint

  c:
    - <<: *cppcheck-lint

  sh:
    - <<: *shellcheck-lint

  yaml:
    - <<: *yamllint-lint

  rst:
    - <<: *restructuredtext-lint-lint
...
